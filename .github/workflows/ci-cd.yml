name: CI/CD Workflow

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
      - staging
      - main

jobs:
  # Step 1: CI - Test and Validate
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Make Migrations
        run: python manage.py makemigrations

      - name: Apply Migrations
        run: python manage.py migrate

      - name: Run Unit Tests
        run: pytest

      - name: Run Ruff
        run: ruff check .

  # Step 2: CD - Deploy to Staging
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "${{ secrets.DOCKER_USER }}/railworks"

      - name: Build and Push Docker Image to Staging
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USER }}/railworks:staging
            ${{ secrets.DOCKER_USER }}/railworks:${{ github.sha }}
          platforms: linux/amd64,linux/arm64 # Build for multiple architectures
          cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/railworks:cache
          cache-to: type=inline,push=true

      # Docker Scout Compare Command
      - name: Docker Scout
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@v1
        with:
          command: compare
          image: ${{ secrets.DOCKER_USER }}/railworks:staging
          to-env: production
          ignore-unchanged: true
          only-severities: critical,high
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # Step 3: CD - Deploy to Production
  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "${{ secrets.DOCKER_USER }}/railworks"

      - name: Build and Push Docker Image to Production
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USER }}/railworks:latest
            ${{ secrets.DOCKER_USER }}/railworks:${{ github.sha }}
          platforms: linux/amd64,linux/arm64 # Build for multiple architectures
          cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/railworks:cache
          cache-to: type=inline,push=true
